package ru.anastasia.NauJava.service.facade.dto;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import ru.anastasia.NauJava.entity.contact.Contact;
import ru.anastasia.NauJava.entity.contact.ContactDetail;
import ru.anastasia.NauJava.entity.event.Event;
import ru.anastasia.NauJava.entity.note.Note;
import ru.anastasia.NauJava.entity.socialprofile.SocialProfile;
import ru.anastasia.NauJava.entity.tag.ContactTag;
import ru.anastasia.NauJava.entity.tag.Tag;

import java.util.List;

/**
 * DTO —Å –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ–Ω—Ç–∞–∫—Ç–µ –∏ –≤—Å–µ—Ö —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å—É—â–Ω–æ—Å—Ç—è—Ö
 */
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class ContactFullDetails {
    /**
     * –ö–æ–Ω—Ç–∞–∫—Ç
     */
    private Contact contact;

    /**
     * –°–ø–∏—Å–æ–∫ —Å–ø–æ—Å–æ–±–æ–≤ —Å–≤—è–∑–∏
     */
    private List<ContactDetail> contactDetails;

    /**
     * –°–ø–∏—Å–æ–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–≤—è–∑–∏
     */
    private List<ContactDetail> primaryContactDetails;

    /**
     * –°–ø–∏—Å–æ–∫ –ø—Ä–æ—Ñ–∏–ª–µ–π –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö
     */
    private List<SocialProfile> socialProfiles;

    /**
     * –°–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π
     */
    private List<Event> events;

    /**
     * –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è
     */
    private Event birthday;

    /**
     * –°–ø–∏—Å–æ–∫ –∑–∞–º–µ—Ç–æ–∫
     */
    private List<Note> notes;

    /**
     * –°–ø–∏—Å–æ–∫ —Ç–µ–≥–æ–≤
     */
    private List<Tag> tags;

    /**
     * –°–ø–∏—Å–æ–∫ —Ç–µ–≥–æ–≤ –∫–æ–Ω—Ç–∞–∫—Ç–∞
     */
    private List<ContactTag> contactTags;

    public String getFullName() {
        return contact.getFirstName() + " " + contact.getLastName();
    }

    public boolean hasBirthday() {
        return birthday != null;
    }

    public boolean isFavorite() {
        return Boolean.TRUE.equals(contact.getIsFavorite());
    }

    public boolean hasSocialProfiles() {
        return socialProfiles != null && !socialProfiles.isEmpty();
    }

    public boolean hasTags() {
        return tags != null && !tags.isEmpty();
    }

    public String getDisplayInfo() {
        StringBuilder sb = new StringBuilder();
        sb.append(getFullName());

        if (hasBirthday()) {
            sb.append(" üéÇ");
        }

        if (isFavorite()) {
            sb.append(" ‚≠ê");
        }

        return sb.toString();
    }
}
